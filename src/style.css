@import "tailwindcss";
/* 
   The @theme block is where you define your CSS variables.
   These variables will then be referenced in tailwind.config.js.
   Vite/PostCSS will correctly process this.
*/
@theme {
  /* Colors */
  --color-brand-cream: #FDF9ED;
  --color-brand-brown: #7E5B4B;
  --color-brand-teal: #81C7BE;
  --color-brand-light-cream: #FCFBF8; /* <-- ADD THIS LINE */
  --color-brand-terracotta: #BA644A;
  --color-brand-grey-green: #A3B5AE;
  --color-brand-dark-brown: #4B3B32;

  /* Font Families */
  --font-heading: 'Merriweather', serif;
  --font-body: 'Nunito Sans', sans-serif;
}

/* Apply global base styles that directly use our CSS variables */
body {
  font-family: var(--font-body); /* Using the CSS variable */
  color: var(--color-brand-dark-brown); /* Using the CSS variable */
  background-color: var(--color-brand-cream); /* Using the CSS variable */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Apply default heading styles that directly use our CSS variables */
h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-heading); /* Using the CSS variable */
  color: var(--color-brand-brown); /* Using the CSS variable */
}

#cid_8 .jfUpload-files-container {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    background: var(--color-brand-terracotta);
    color: #fff;
    font-weight: 600;
    border-radius: 0.375rem;
    cursor: pointer;
    position: relative; /* so input can be positioned over it */
    transition: background .15s ease;
  }
  #cid_8 .jfUpload-files-container:hover {
    background: var(--color-brand-dark-brown);
  }
  #cid_8 .jfUpload-files-container:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(129,199,190,0.16);
  }

  /* Ensure the real file input covers the visible container so clicks open picker.
     We keep it invisible (opacity:0) but fully interactive and keyboard focusable. */
  #cid_8 .jfUpload-files-container input[type="file"],
  #cid_8 .inputContainer input[type="file"],
  #cid_8 input.fileupload-input,
  #cid_8 .form-upload-multiple {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
    z-index: 2; /* above any decorative layers */
    margin: 0;
    padding: 0;
    border: 0;
  }

  /* Hide duplicate/invisible buttons injected by uploader libs so only one visible layer exists.
     Use !important to override inline styles coming from JS. */
  #cid_8 .jfUpload-button,
  #cid_8 .jfUpload-button-container,
  #cid_8 .qq-upload-button,
  #cid_8 .qq-upload-drop-area {
    display: none !important;
  }

  /* If library also creates an input container that looks like a button, make sure it's transparent
     so the themed container is visible (but keep it interactive if present). */
  #cid_8 .inputContainer {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    background: transparent;
  }

  /* Uploaded files list â€” stack vertically instead of inline */
#cid_8 .qq-upload-list {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;     /* stack items vertically */
  gap: 0.5rem;
  align-items: stretch;      /* make items take available width */
  margin-top: 0.5rem;
  width: 100%;
  box-sizing: border-box;    /* include padding/border within width */
  min-width: 0;              /* allow flex children to shrink properly */
}

/* Each uploaded item stays a horizontal row (thumbnail + text + controls) */
#cid_8 .qq-upload-list li {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background: var(--color-brand-light-cream);
  color: var(--color-brand-dark-brown);
  padding: 0.25rem 0.5rem;
  border-radius: 0.375rem;
  border: 1px solid rgba(0,0,0,0.06);
  width: 100%;
  box-sizing: border-box;
  min-width: 0;              /* avoid unexpected overflow/cutting */
  overflow: visible;        /* ensure child visuals aren't clipped unexpectedly */
}
  
  #cid_8 .qq-upload-img-container {
    width: 40px;
    height: 40px;
    overflow: hidden;
    border-radius: 0.25rem;
    flex: 0 0 40px;
  }
  /* Make sure the image is centered and not aligned to the left */
#cid_8 .qq-upload-img-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;   /* center crop instead of left-crop */
  display: block;
}

/* File name area should be allowed to truncate but not push out the layout */
#cid_8 .qq-upload-file {
  max-width: calc(100% - 56px); /* reserve space for thumbnail + controls */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: 600;
  min-width: 0;               /* prevent flex overflow */
}
  #cid_8 .qq-upload-size {
    color: var(--color-brand-grey-green);
    font-size: 0.85rem;
  }

  /* Delete control styling */
  #cid_8 .qq-upload-delete {
    background: transparent;
    border: 1px solid rgba(0,0,0,0.06);
    padding: 0.15rem 0.4rem;
    border-radius: 0.35rem;
    cursor: pointer;
    color: var(--color-brand-dark-brown);
    margin-left: 0.25rem;
    z-index: 1;
  }
  #cid_8 .qq-upload-delete:hover {
    background: var(--color-brand-terracotta);
    color: #fff;
  }

  #cid_8 .qq-upload-failed-text{
    display: none;
  }

 /* Small-screen tweaks: keep full-width behavior, make sure spacing fits */
@media (max-width: 640px) {
  /* #cid_8 is the element in your markup with class w-1/4 */
  #cid_8 {
    width: 100% !important;
    max-width: 100% !important;
    box-sizing: border-box;
    overflow: visible; /* allow injected children to be visible */
  }


  /* items already stack due to the global rule; ensure they fill width */
  #cid_8 .qq-upload-list {
    align-items: stretch;
  }

  #cid_8 .qq-upload-list li {
    width: 100%;
  }
}



/* SUPER IMPORTANT CODE THAT CONTROLS THE NAVIGATON DROP DOWNS */
nav details summary::-webkit-details-marker,
nav details summary::marker {
  display: none;
}

/* show main dropdown when outer details is open */
nav details[open] > .dropdown {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
  transform: translateX(-50%) translateY(0);
}

/* show nested submenu when nested details is open */
nav details details[open] > .submenu {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
  transform: translateX(0);
}

/* small focus ring for keyboard users */
nav details summary:focus {
  outline: 2px solid transparent;
  box-shadow: 0 0 0 3px rgba(99,102,241,0.12);
  border-radius: 6px;
}
/* SUPER IMPORTANT CODE THAT CONTROLS THE NAVIGATON DROP DOWNS */